version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: cloud_postgres
    restart: always
    environment:
        - POSTGRES_DATABASE=${POSTGRES_DATABASE}   # MLFLOW
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DATABASE_2=${POSTGRES_DATABASE_2}
        - POSTGRES_USER_2=${POSTGRES_USER_2}
        - POSTGRES_PASSWORD_2=${POSTGRES_PASSWORD_2}
    volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./postgres/init.sh:/docker-entrypoint-initdb.d/init.sh
    ports:
        - ${POSTGRES_PORT}:5432
    healthcheck:
        test: ["CMD", "pg_isready", "-U", "airflow"]
        interval: 5s
        retries: 5
    logging:
        options:
            max-size: 10m
            max-file: "3"


  minio:
    image: minio/minio
    container_name: cloud_minio
    command: server /data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data

  airflow:
    build:
      context: ./airflow
    container_name: cloud_airflow
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__ENABLE_XCOM_PICKLING=true
    depends_on:
      - postgres
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/src:/opt/airflow/src
      - /var/run/docker.sock:/var/run/docker.sock

  mlflow:
    build:
      context: ./mlflow
    container_name: cloud_mlflow
    ports:
      - "5000:5000"
    environment:
      BACKEND_STORE_URI: postgresql+psycopg2://admin:admin@postgres:5432/cloud
      ARTIFACT_STORE: s3://mlflow
      AWS_ACCESS_KEY_ID: admin
      AWS_SECRET_ACCESS_KEY: admin123
    depends_on:
      - postgres
      - minio

  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile
      args:
        JUPYTER_PASSWORD: ${JUPYTER_PASSWORD}
    container_name: cloud_jupyter
    ports:
        - ${JUPYTER_PORT}:8888
    volumes:
        - ./jupyter/notebooks:/jupyter/notebooks
    depends_on:
      - postgres
      - mlflow

volumes:
  postgres_data:
  minio_data:
